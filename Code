import cv2
import os
import time
from picamera2 import Picamera2
import telegram
import requests

# Detector initialization
face_detector = cv2.CascadeClassifier("haarcascade_frontalface_default.xml")
eye_detector = cv2.CascadeClassifier("haarcascade_eye.xml")

# Telegram bot initialization
token = "6701243623-AAEDYIPkrqj1AdFTXfmFWURW5irohXlavAl"
bot = telegram.Bot(token)

# Camera setup
picam2 = Picamera2()
picam2.configure(picam2.create_preview_configuration(main={"format": 'XRGB8888', "size": (500, 500)}))
picam2.start()

# variables
blink = 0
start_time = None
time_eye = None

# Functions for messages
def trimite_mesaj(text):
    params = {"chat_id": '6674663408', "text": text}
    r = requests.get(f"https://api.telegram.org/bot{token}/sendMessage", params=params)

def mesaj_limita_condus():
    trimite_mesaj("Atenție! Ai condus de prea mult timp!")

def mesaj():
    trimite_mesaj("Atenție! Au apărut primele semne ale oboselii!")

# The main loop
while True:
    im = picam2.capture_array()
    
    # Face detection
    grey = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY)
    faces = face_detector.detectMultiScale(grey, 1.1, 5)
    
    for (x, y, w, h) in faces:
        cv2.rectangle(im, (x, y), (x + w, y + h), (0, 255, 0), 2)
        roi_grey = grey[y:y+h, x:x+w]
        roi_color = im[y:y+h, x:x+w]
        
        if start_time is None:
            start_time = time.time()
        
        # Eye detection
        eyes = eye_detector.detectMultiScale(roi_grey)
        eye_count = 0
        
        if len(eyes) == 0:
            blink += 1
            time_eye = time.time()
            print('Fără ochi detectați ', blink)
        
        for (ex, ey, ew, eh) in eyes:
            if eye_count > 1:
                break
            cv2.rectangle(roi_color, (ex, ey), (ex + ew, ey + eh), (255, 0, 0), 2)
            eye_count += 1
    
    cv2.imshow("Camera", im)
    cv2.waitKey(1)
    
    # Reset counters if no faces are detected
    if len(faces) == 0:
        start_time = None
    
    # Check time and send appropriate messages
    if start_time is not None:
        elapsed_time = time.time() - start_time
        
        if elapsed_time > 10:
            mesaj_limita_condus()
            print("Atenție! Ai condus de prea mult timp!")
            start_time = None
    
    if blink > 4:
        mesaj()
        print("Alertă! Trage pe dreapta!")
        break

# Turn off the camera and close the windows
picam2.stop()
cv2.destroyAllWindows()
